<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
        <!-- 这里填写对应的Dao文件所在的路径 -->
<mapper namespace="com.example.draw.rtle.dao.AnchorDao">
 <resultMap id="BaseResultMap" type="com.example.draw.rtle.model.Anchor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="serial_no" jdbcType="VARCHAR" property="serialNo" />
    <result column="enable" jdbcType="VARCHAR" property="enable" />
    <result column="anchor_id" jdbcType="VARCHAR" property="anchorId" />
    <result column="anchor_name" jdbcType="VARCHAR" property="anchorName" />
    <result column="x" jdbcType="REAL" property="x" />
    <result column="y" jdbcType="REAL" property="y" />
    <result column="z" jdbcType="REAL" property="z" />
    <result column="comments" jdbcType="VARCHAR" property="comments" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="mac" jdbcType="VARCHAR" property="mac" />
    <result column="online" jdbcType="VARCHAR" property="online" />
  </resultMap>
  <delete id="deleteAnchor" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from anchor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="addAnchor" parameterType="com.example.draw.rtle.model.Anchor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into anchor (serial_no, `enable`, anchor_id, 
      anchor_name, x, y, z, 
      comments, ip, mac, 
      `online`)
    values (#{serialNo,jdbcType=VARCHAR}, #{enable,jdbcType=VARCHAR}, #{anchorId,jdbcType=VARCHAR}, 
      #{anchorName,jdbcType=VARCHAR}, #{x,jdbcType=REAL}, #{y,jdbcType=REAL}, #{z,jdbcType=REAL}, 
      #{comments,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{mac,jdbcType=VARCHAR}, 
      #{online,jdbcType=VARCHAR})
  </insert>
  <update id="updateAnchor" parameterType="com.example.draw.rtle.model.Anchor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update anchor
    set serial_no = #{serialNo,jdbcType=VARCHAR},
      `enable` = #{enable,jdbcType=VARCHAR},
      anchor_id = #{anchorId,jdbcType=VARCHAR},
      anchor_name = #{anchorName,jdbcType=VARCHAR},
      x = #{x,jdbcType=REAL},
      y = #{y,jdbcType=REAL},
      z = #{z,jdbcType=REAL},
      comments = #{comments,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      mac = #{mac,jdbcType=VARCHAR},
      `online` = #{online,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAnchorById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, serial_no, `enable`, anchor_id, anchor_name, x, y, z, comments, ip, mac, 
    `online`
    from anchor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getAnchorLsit" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, serial_no, `enable`, anchor_id, anchor_name, x, y, z, comments, ip, mac, 
    `online`
    from anchor
  </select>
  <select id="getAnchorByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, serial_no, `enable`, anchor_id, anchor_name, x, y, z, comments, ip, mac, 
    `online`
    from anchor
    where anchor_name like concat('%',#{anchor_name,jdbcType=VARCHAR},'%')
  </select>
  <select id="anchorList" parameterType="map" resultMap="BaseResultMap">
  	select * from anchor limit #{beg}, #{num}
  </select>
  
  <select id="count" parameterType="map" resultType="integer">
  	
  	select count(*) from anchor
  </select>
</mapper>